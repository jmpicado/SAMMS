package com.example.samms.tabs;

import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.net.URL;

import org.json.JSONArray;
import org.json.JSONObject;

import com.example.samms.SammsUI;
import com.example.samms.windows.WindowsInfo;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Container.Filter;
import com.vaadin.data.util.IndexedContainer;
import com.vaadin.data.util.filter.SimpleStringFilter;
import com.vaadin.event.ItemClickEvent;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Table;
import com.vaadin.ui.TextField;
import com.vaadin.ui.UI;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.themes.Reindeer;

public class SAMMSTabBookOrder extends SAMMSTab {

	
	
	TextField filter_1;	TextField filter_2;	TextField filter_3;	TextField filter_4;TextField filter_5;
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
	Table table_Compras;Table table_Ventas;


	public SAMMSTabBookOrder(SammsUI sammsUI) {
		super(sammsUI);
//		this.setIcon(new ThemeResource("resources/clock.jpg"));
//		this.setCaption("Clock");
		
		try {
			buildMainLayout();
			fillingTable();
//			events();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}


	/**
	 * 
	 */
	private void events() {
		table_Compras.addItemClickListener(new ItemClickEvent.ItemClickListener() {
            private static final long serialVersionUID = 1L;

            public void itemClick(ItemClickEvent event) {
                if (event.isDoubleClick()) {
                     // The item was double-clicked, event.getItem() returns the target.
                	WindowsInfo sub = new WindowsInfo(event.getItem());
                	// Add it to the root component
                	UI.getCurrent().addWindow(sub);
                }
            }
        });
		
	}


	private void fillingTable() throws Exception {
		URL val = this.getClass().getResource("./data/ordersbook.json");
		BufferedReader buffer = new BufferedReader(new InputStreamReader(new FileInputStream(val.getFile()), "UTF8"));
		String sCadena = "";String sJSON = "";
	    while ((sCadena = buffer.readLine())!=null) {
	    	sJSON = sJSON + sCadena; 
	    }
	    buffer.close();
	    
	    // Creating a JSONObject from a String 
	    JSONObject nodeRoot  = new JSONObject(sJSON); 
	    // Creating a sub-JSONObject from another JSONObject
	    JSONArray nodeArray = nodeRoot.getJSONArray("libro_ordenes");

//	    // Getting the value of a attribute in a JSONObject
//	    String sSDR = nodeStats.getString("sdr");
		//Values
	    int contB = 0;int contS = 0;
		for (int i = 0; i< nodeArray.length(); i++){
			JSONObject obj = nodeArray.getJSONObject(i);
			if (obj.get("SIDE").equals("B")){
				table_Compras.addItem(new Object[]{obj.get("INSTRUMENTID"),obj.get("MARKETID"), obj.get("PRICE"),
								obj.get("QTY"),obj.get("INTERMEDIARYID")}, contB++);
			}else{
				table_Ventas.addItem(new Object[]{obj.get("INSTRUMENTID"),obj.get("MARKETID"), obj.get("PRICE"),
						obj.get("QTY"),obj.get("INTERMEDIARYID")}, contS++);
			}
				
		}		
		
		
	}


	@AutoGenerated
	private void buildMainLayout() throws Exception {
		// table_Compras
		table_Compras = new Table("Orders Book Table (B)");
		table_Compras.addStyleName(Reindeer.TABLE_STRONG);
		table_Compras.setImmediate(true);
		table_Compras.setSizeFull();
		// Define two columns for the built-in container
		table_Compras.addContainerProperty("INSTRUMENTID", String.class, null);
		table_Compras.addContainerProperty("MARKETID", String.class, null);
		table_Compras.addContainerProperty("PRICE", String.class, null);
		table_Compras.addContainerProperty("QTY", String.class, null);
		table_Compras.addContainerProperty("INTERMEDIARYID", String.class, null);
		// Allow selecting items from the table.
		table_Compras.setSelectable(true);

		table_Ventas = new Table("Orders Book Table (S)");
		table_Ventas.addStyleName(Reindeer.TABLE_STRONG);
		table_Ventas.setImmediate(true);
		table_Ventas.setSizeFull();
		// Define two columns for the built-in container
		table_Ventas.addContainerProperty("INSTRUMENTID", String.class, null);
		table_Ventas.addContainerProperty("MARKETID", String.class, null);
		table_Ventas.addContainerProperty("PRICE", String.class, null);
		table_Ventas.addContainerProperty("QTY", String.class, null);
		table_Ventas.addContainerProperty("INTERMEDIARYID", String.class, null);
		// Allow selecting items from the table.
		table_Ventas.setSelectable(true);

		// Filters
//		filter_1 = new TextField();
//		filter_1.setCaption("Filter(INSTRUMENTID)");	filter_1.setImmediate(false);filter_1.setNullSettingAllowed(true);		
//		filter_1.setWidth("100px");		filter_1.setHeight("-1px");
//		filter_2 = new TextField();
//		filter_2.setCaption("Filter(INSTRUMENTCLASSID)");filter_2.setImmediate(false);filter_2.setNullSettingAllowed(true);
//		filter_2.setWidth("250px");		filter_2.setHeight("-1px");
//		filter_3 = new TextField();
//		filter_3.setCaption("Filter(STOCKOWNERRIGHTS)");filter_3.setImmediate(false);filter_3.setNullSettingAllowed(true);
//		filter_3.setWidth("180px");		filter_3.setHeight("-1px");
//		filter_4 = new TextField();
//		filter_4.setCaption("Filter(SHORTDESCRIPTION)");filter_4.setImmediate(false);filter_4.setNullSettingAllowed(true);
//		filter_4.setWidth("180px");		filter_4.setHeight("-1px");
//		filter_5 = new TextField();
//		filter_5.setCaption("Filter(ISSUERID)");filter_5.setImmediate(false);filter_5.setNullSettingAllowed(true);
//		filter_5.setWidth("180px");		filter_5.setHeight("-1px");
//		
		//Bottons
		Button button_1 = new Button();
		button_1.setCaption("Filter");
		button_1.setImmediate(false);
		button_1.setWidth("-1px");
		button_1.setHeight("-1px");
//		button_1.addClickListener(new Button.ClickListener() {
//			public void buttonClick(ClickEvent event) {
//				//Notification.show("Do not press this button again");
//				IndexedContainer container = (IndexedContainer) table_Compras.getContainerDataSource();
//				String filterS1 = (String) filter_1.getValue();String filterS2 = (String) filter_2.getValue();String filterS3 = (String) filter_3.getValue();
//				String filterS4 = (String) filter_4.getValue();String filterS5 = (String) filter_5.getValue();
//				Filter filter1 = new SimpleStringFilter("INSTRUMENTID",filterS1, true, false);Filter filter2 = new SimpleStringFilter("INSTRUMENTCLASSID",filterS2, true, false);
//				Filter filter3 = new SimpleStringFilter("STOCKOWNERRIGHTS",filterS3, true, false);Filter filter4 = new SimpleStringFilter("SHORTDESCRIPTION",filterS4, true, false);
//				Filter filter5 = new SimpleStringFilter("ISSUERID",filterS5, true, false);
//				if ( !filterS1.isEmpty() )
//					container.addContainerFilter(filter1);
//				if ( !filterS2.isEmpty() )
//					container.addContainerFilter(filter2);
//				if ( !filterS3.isEmpty() )
//					container.addContainerFilter(filter3);
//				if ( !filterS4.isEmpty() )
//					container.addContainerFilter(filter4);
//				if ( !filterS5.isEmpty() )
//					container.addContainerFilter(filter5);
//				
//			}
//		});
		Button button_Reset = new Button();
		button_Reset.setCaption("Reset");
		button_Reset.setImmediate(false);
		button_Reset.setWidth("-1px");
		button_Reset.setHeight("-1px");
//		button_Reset.addClickListener(new Button.ClickListener() {
//			public void buttonClick(ClickEvent event) {
//				//Notification.show("Do not press this button again");
//				IndexedContainer container = (IndexedContainer) table_Compras.getContainerDataSource();
//				container.removeAllContainerFilters();
//				
//			}
//		});
//		
		//ADDDING...................
		HorizontalLayout horLayout = new HorizontalLayout();
		//horLayout.addComponent(button_1);
		horLayout.addComponent(table_Compras);horLayout.addComponent(table_Ventas);
		horLayout.setComponentAlignment(table_Compras, Alignment.TOP_LEFT);
		horLayout.setComponentAlignment(table_Ventas, Alignment.TOP_RIGHT);
		this.addComponent(horLayout);
		

//		HorizontalLayout horLayout2 = new HorizontalLayout();
//		horLayout2.addComponent(table_Ventas);
//		horLayout2.addComponent(button_Reset);
//		this.addComponent(horLayout2);

		//this.addComponent(formLayout);
		//horLayout.addComponent(filter_1);horLayout.addComponent(filter_2);horLayout.addComponent(filter_3);horLayout.addComponent(filter_4);horLayout.addComponent(filter_5);
		//horLayout.addComponent(button_1);horLayout.addComponent(button_Reset);
//		horLayout.setComponentAlignment(filter_1, Alignment.TOP_LEFT);horLayout.setComponentAlignment(filter_2, Alignment.TOP_CENTER);
		//horLayout.setComponentAlignment(button_1, Alignment.BOTTOM_RIGHT);horLayout.setComponentAlignment(button_Reset, Alignment.BOTTOM_RIGHT);
//		this.setComponentAlignment(table_Compras, Alignment.TOP_LEFT);
//		this.setComponentAlignment(horLayout, Alignment.TOP_LEFT);
		

		
	}

}
